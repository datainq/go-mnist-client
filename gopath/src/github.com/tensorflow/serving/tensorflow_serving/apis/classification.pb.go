// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow_serving/apis/classification.proto

/*
Package tensorflow_serving is a generated protocol buffer package.

It is generated from these files:
	tensorflow_serving/apis/classification.proto
	tensorflow_serving/apis/get_model_metadata.proto
	tensorflow_serving/apis/inference.proto
	tensorflow_serving/apis/input.proto
	tensorflow_serving/apis/model.proto
	tensorflow_serving/apis/predict.proto
	tensorflow_serving/apis/prediction_service.proto
	tensorflow_serving/apis/regression.proto

It has these top-level messages:
	Class
	Classifications
	ClassificationResult
	ClassificationRequest
	ClassificationResponse
	SignatureDefMap
	GetModelMetadataRequest
	GetModelMetadataResponse
	InferenceTask
	InferenceResult
	MultiInferenceRequest
	MultiInferenceResponse
	ExampleList
	ExampleListWithContext
	Input
	ModelSpec
	PredictRequest
	PredictResponse
	Regression
	RegressionResult
	RegressionRequest
	RegressionResponse
*/
package tensorflow_serving

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A single class.
type Class struct {
	// Label or name of the class.
	Label string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	// Score for this class (e.g., the probability the item belongs to this
	// class).
	Score float32 `protobuf:"fixed32,2,opt,name=score" json:"score,omitempty"`
}

func (m *Class) Reset()                    { *m = Class{} }
func (m *Class) String() string            { return proto.CompactTextString(m) }
func (*Class) ProtoMessage()               {}
func (*Class) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Class) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Class) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

// List of classes for a single item (tensorflow.Example).
type Classifications struct {
	Classes []*Class `protobuf:"bytes,1,rep,name=classes" json:"classes,omitempty"`
}

func (m *Classifications) Reset()                    { *m = Classifications{} }
func (m *Classifications) String() string            { return proto.CompactTextString(m) }
func (*Classifications) ProtoMessage()               {}
func (*Classifications) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Classifications) GetClasses() []*Class {
	if m != nil {
		return m.Classes
	}
	return nil
}

// Contains one result per input example, in the same order as the input in
// ClassificationRequest.
type ClassificationResult struct {
	Classifications []*Classifications `protobuf:"bytes,1,rep,name=classifications" json:"classifications,omitempty"`
}

func (m *ClassificationResult) Reset()                    { *m = ClassificationResult{} }
func (m *ClassificationResult) String() string            { return proto.CompactTextString(m) }
func (*ClassificationResult) ProtoMessage()               {}
func (*ClassificationResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ClassificationResult) GetClassifications() []*Classifications {
	if m != nil {
		return m.Classifications
	}
	return nil
}

type ClassificationRequest struct {
	// Model Specification.
	ModelSpec *ModelSpec `protobuf:"bytes,1,opt,name=model_spec,json=modelSpec" json:"model_spec,omitempty"`
	// Input data.
	Input *Input `protobuf:"bytes,2,opt,name=input" json:"input,omitempty"`
}

func (m *ClassificationRequest) Reset()                    { *m = ClassificationRequest{} }
func (m *ClassificationRequest) String() string            { return proto.CompactTextString(m) }
func (*ClassificationRequest) ProtoMessage()               {}
func (*ClassificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ClassificationRequest) GetModelSpec() *ModelSpec {
	if m != nil {
		return m.ModelSpec
	}
	return nil
}

func (m *ClassificationRequest) GetInput() *Input {
	if m != nil {
		return m.Input
	}
	return nil
}

type ClassificationResponse struct {
	// Result of the classification.
	Result *ClassificationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *ClassificationResponse) Reset()                    { *m = ClassificationResponse{} }
func (m *ClassificationResponse) String() string            { return proto.CompactTextString(m) }
func (*ClassificationResponse) ProtoMessage()               {}
func (*ClassificationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ClassificationResponse) GetResult() *ClassificationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Class)(nil), "tensorflow.serving.Class")
	proto.RegisterType((*Classifications)(nil), "tensorflow.serving.Classifications")
	proto.RegisterType((*ClassificationResult)(nil), "tensorflow.serving.ClassificationResult")
	proto.RegisterType((*ClassificationRequest)(nil), "tensorflow.serving.ClassificationRequest")
	proto.RegisterType((*ClassificationResponse)(nil), "tensorflow.serving.ClassificationResponse")
}

func init() { proto.RegisterFile("tensorflow_serving/apis/classification.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xd9, 0x96, 0x56, 0x3a, 0x3d, 0x14, 0x96, 0x2a, 0x55, 0x10, 0x42, 0x7a, 0xc9, 0x41,
	0x12, 0x68, 0xae, 0x1e, 0xc4, 0x82, 0xe0, 0xa1, 0x97, 0xf5, 0xe6, 0xa5, 0xa4, 0x71, 0x2a, 0x0b,
	0xdb, 0xec, 0x9a, 0xd9, 0xe8, 0x3f, 0xf0, 0x37, 0x7b, 0x94, 0xec, 0x26, 0x94, 0xb4, 0x06, 0x6f,
	0x99, 0xf0, 0xcd, 0x9b, 0xf7, 0xde, 0xc2, 0x9d, 0xc5, 0x82, 0x74, 0xb9, 0x57, 0xfa, 0x6b, 0x4b,
	0x58, 0x7e, 0xca, 0xe2, 0x3d, 0xc9, 0x8c, 0xa4, 0x24, 0x57, 0x19, 0x91, 0xdc, 0xcb, 0x3c, 0xb3,
	0x52, 0x17, 0xb1, 0x29, 0xb5, 0xd5, 0x9c, 0x1f, 0xe9, 0xb8, 0xa1, 0x6f, 0x96, 0x7d, 0x0a, 0xb2,
	0x30, 0x95, 0xf5, 0x8b, 0xfd, 0xd0, 0x41, 0xbf, 0xa1, 0xf2, 0x50, 0x98, 0xc2, 0x68, 0x5d, 0x5f,
	0xe5, 0x73, 0x18, 0xa9, 0x6c, 0x87, 0x6a, 0xc1, 0x02, 0x16, 0x4d, 0x84, 0x1f, 0xea, 0xbf, 0x94,
	0xeb, 0x12, 0x17, 0x83, 0x80, 0x45, 0x03, 0xe1, 0x87, 0xf0, 0x09, 0x66, 0xeb, 0x8e, 0x55, 0xe2,
	0x29, 0x5c, 0x38, 0xf7, 0x48, 0x0b, 0x16, 0x0c, 0xa3, 0xe9, 0xea, 0x3a, 0x3e, 0xf7, 0x1d, 0xbb,
	0x2d, 0xd1, 0x92, 0x21, 0xc2, 0xbc, 0xab, 0x23, 0x90, 0x2a, 0x65, 0xf9, 0x06, 0x66, 0xdd, 0x2a,
	0x5a, 0xd1, 0x65, 0xaf, 0xe8, 0x11, 0x15, 0xa7, 0xbb, 0xe1, 0x37, 0x83, 0xcb, 0xd3, 0x3b, 0x1f,
	0x15, 0x92, 0xe5, 0xf7, 0x00, 0xae, 0x8c, 0x2d, 0x19, 0xcc, 0x5d, 0xf2, 0xe9, 0xea, 0xf6, 0xaf,
	0x1b, 0x9b, 0x9a, 0x7a, 0x31, 0x98, 0x8b, 0xc9, 0xa1, 0xfd, 0xe4, 0x09, 0x8c, 0x5c, 0xdf, 0xae,
	0x9c, 0x9e, 0xc4, 0xcf, 0x35, 0x20, 0x3c, 0x17, 0xbe, 0xc2, 0xd5, 0x59, 0x5e, 0xa3, 0x0b, 0x42,
	0xfe, 0x00, 0xe3, 0xd2, 0x65, 0x6f, 0x4c, 0x44, 0xff, 0x07, 0xf5, 0x5d, 0x89, 0x66, 0xef, 0x71,
	0xf8, 0xc3, 0xd8, 0x6e, 0xec, 0x1e, 0x35, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x91, 0xd1,
	0xa7, 0x62, 0x02, 0x00, 0x00,
}
